{"version":3,"sources":["webpack:///./src/modules/leftMenu/leftMenu.component.js"],"names":["LeftMenuSettings","React","lazy","styles","feedsTitle","marginTop","marginLeft","feedsIcon","marginRight","display","settingsIcon","float","link","textDecoration","facebookLike","margin","LeftMenu","props","state","settingsOpen","f","onSelectFeedSource","Analytics","triggerSwitchFeed","tag","FeedsCacheProvider","getEnabledFeeds","map","feed","feedIcon","provideIcon","icon","name","setState","toggleSettings","feedbackDialogOpen","open","onClose","getFeedOptions","renderSettings","Component"],"mappings":"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","file":"4.index.js","sourcesContent":["import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {provideIcon} from '../utils/functions/icon.service';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LazyLoad from \"../utils/components/lazyLoad.component\";\r\nimport DialogLoading from \"../utils/components/dialogLoading.component\";\r\nimport LazyLoadError from \"../utils/components/lazyLoadError.component\";\r\n\r\nimport FeedsCacheProvider from '../utils/functions/feedsCache.provider'\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport Analytics from \"../utils/functions/analytics.service\";\r\n\r\nconst LeftMenuSettings = React.lazy(() =>  import(\"./leftMenuSettings.component\"));\r\n\r\nconst styles = {\r\n    feedsTitle: {\r\n        marginTop: 15,\r\n        marginLeft: 25,\r\n    },\r\n    feedsIcon: {\r\n        marginRight: 10,\r\n        marginTop: 7,\r\n        display: 'inline-block'\r\n    },\r\n    settingsIcon: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        marginLeft: 15\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    facebookLike: {\r\n        margin: '7px 23px'\r\n    }\r\n};\r\n\r\nexport default class LeftMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {settingsOpen: false};\r\n    }\r\n    onSelectFeedSource(f){\r\n        this.props.onSelectFeedSource();\r\n        Analytics.triggerSwitchFeed(f.tag);\r\n    }\r\n    getFeedOptions(){\r\n        return FeedsCacheProvider.getEnabledFeeds().map((feed)=>{ return(\r\n                <ListItem button onClick={()=>this.onSelectFeedSource(feed)} className='leftMenu_feedSource'  id={'leftMenu_changeSourceLink_' + feed.tag}>\r\n                    <ListItemIcon style={styles.feedIcon} className='leftMenu_selectSource'>\r\n                        <Typography color='primary'>{provideIcon(feed.icon)}</Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText color='primary' primary={<Typography color='primary'>{feed.name}</Typography>} className='leftMenu_selectSource'/>\r\n                </ListItem>\r\n        )});\r\n    }\r\n    toggleSettings(){\r\n        if (this.state.settingsOpen) this.setState({settingsOpen: false});\r\n        else this.setState({settingsOpen: true});\r\n    }\r\n    renderSettings(){\r\n        if (this.state.settingsOpen) return (\r\n            <LazyLoad loadingFallback={(<DialogLoading/>)} errorFallback={<LazyLoadError message='Offline... cannot open settings...'/>}>\r\n                <LeftMenuSettings open={this.state.settingsOpen} onClose={()=>this.toggleSettings()}/>\r\n            </LazyLoad>);\r\n    }\r\n    toggleFeedbackDialog(){\r\n        if (this.state.feedbackDialogOpen) this.setState({feedbackDialogOpen: false});\r\n        else this.setState({feedbackDialogOpen: true});\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Drawer open={this.props.open} onClose={()=>this.props.onClose()} id='leftMenu'>\r\n                    <Typography variant=\"h5\" style={styles.feedsTitle}>\r\n                        <RssFeedIcon style={styles.feedsIcon}/>\r\n                        Feeds\r\n                        <IconButton color='primary' id='openLeftMenuSettings' style={styles.settingsIcon} onClick={()=>this.toggleSettings()}>\r\n                            <SettingsIcon/>\r\n                        </IconButton>\r\n                    </Typography>\r\n                    <List>\r\n                        {this.getFeedOptions()}\r\n                    </List>\r\n                    <div className=\"fb-like\" data-href=\"https://www.4slack.com/\" data-layout=\"button_count\" style={styles.facebookLike}\r\n                         data-action=\"like\" data-size=\"small\" data-show-faces=\"false\" data-share=\"false\"></div>\r\n                </Drawer>\r\n                {this.renderSettings()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}