{"version":3,"sources":["modules/utils/infoChip.component.js","modules/utils/formatNumber.function.js","modules/feed/feedItemMetadata.component.js","modules/comments/commentMetadata.component.js","modules/comments/comment.component.js","modules/comments/commentsList.component.js","modules/feed/feedItemContent.component.js","modules/feed/feedItem.component.js","modules/feed/feedList.component.js","modules/main/appBar.component.js","modules/main/leftMenu.component.js","modules/main/main.component.js","serviceWorker.js","index.js"],"names":["styles","main","margin","zoom","InfoChip","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","icon","react_default","a","createElement","ThumbUp_default","Comment_default","Face_default","Chip_default","getIcon","props","color","clickable","label","children","style","React","Component","formatNumber","n","numeral","format","position","bottom","right","div","display","FeedItemMetadata","infoChip_component_InfoChip","postData","score","className","numComments","CommentMetadata","commentData","author","marginLeft","Comment","_this","call","state","body","replace","data","Fragment","commentMetadata_component_CommentMetadata","Typography_default","dangerouslySetInnerHTML","__html","Divider_default","showBody","isIndented","replies","map","r","_id","hint","CommentsList","postId","dataFetched","axios","get","then","response","setState","commentsRoot","comment_component_Comment","content","width","backgroundColor","spinner","buttons","float","FeedItemContent","type","react_imageloader_lib_default","src","url","imgProps","preloader","CircularProgress_default","controls","autoPlay","window","open","permalink","Card_default","renderContent","CardContent_default","commentsList_component_CommentsList","commentList","id","onClick","e","handleClick","Button_default","openSourceUrl","closeContent","card","img","height","marginRight","cursor","datePosted","opacity","title","paddingBottom","FeedItem","_getPrototypeOf2","_len","length","args","Array","_key","concat","showContent","_this2","feedItemContent_component_FeedItemContent","toggleContent","_this3","CardMedia_default","image","thumbnail","moment","utc","dateUtc","fromNow","feedItemMetadata_component_FeedItemMetadata","maxWidth","listItem","more","marginBottom","loading","textAlign","FeedList","chunkSize","posts","loadMorePosts","feed","setTimeout","_this4","LinearProgress_default","variant","List_default","list","post","ListItem_default","feedItem_component_FeedItem","showLoading","root","flexGrow","logo","marginTop","feedChoice","SlackerAppBar","AppBar_default","Toolbar_default","IconButton_default","aria-label","openMenu","Menu_default","alt","LeftMenu","feedOptions","button","name","onSelectFeedSource","ListItemText_default","primary","Drawer_default","onClose","getFeedOptions","theme","createMuiTheme","palette","blue","secondary","pink","error","red","contrastThreshold","tonalOffset","typography","useNextVariants","FeedOptions","Main","leftMenuOpen","f","lib_default","rel","href","core_styles","CssBaseline_default","appBar_component_SlackerAppBar","leftMenu_component_LeftMenu","closeMenu","selectFeed","feedList_component_FeedList","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","main_component_Main","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kaAMMA,EAAS,CACbC,KAAM,CACFC,OAAQ,EACRC,KAAM,MAICC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,UAAAC,MAAA,SACYC,GACJ,MAAa,SAATA,EAAwBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,MACf,YAATF,EAA2BC,EAAAC,EAAAC,cAACE,EAAAH,EAAD,MAClB,SAATF,EAAwBC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MACrBD,EAAAC,EAAAC,cAAA,cALf,CAAAL,IAAA,SAAAC,MAAA,WASQ,OACIE,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACIF,KAAMT,KAAKiB,QAAQjB,KAAKkB,MAAMT,MAC9BU,MAAOnB,KAAKkB,MAAMC,MAClBC,UAAWpB,KAAKkB,MAAME,UACtBC,MAAOrB,KAAKkB,MAAMI,SAClBC,MAAO/B,EAAOC,WAf9BG,EAAA,CAA8B4B,IAAMC,6BCX7B,SAASC,EAAaC,GACzB,OAAIA,EAAE,IAAaC,IAAQD,GAAGE,OAAO,QACzBF,ECAhB,IAAMnC,EAAS,CACXC,KAAM,CACFqC,SAAU,WACVC,OAAQ,EACRC,MAAO,GAEXC,IAAK,CACDC,QAAS,iBAIJC,EAAb,SAAAtC,GAAA,SAAAsC,IAAA,OAAArC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,GAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAqC,EAAAtC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAqC,EAAA,EAAA5B,IAAA,SAAAC,MAAA,WAEQ,OACIE,EAAAC,EAAAC,cAAA,OAAKW,MAAO/B,EAAOC,MACfiB,EAAAC,EAAAC,cAACwB,EAAD,CAAU3B,KAAK,QAAQiB,EAAa1B,KAAKkB,MAAMmB,SAASC,QACxD5B,EAAAC,EAAAC,cAAA,OAAKW,MAAO/B,EAAOyC,IAAKM,UAAU,6BAC9B7B,EAAAC,EAAAC,cAACwB,EAAD,CAAU3B,KAAK,UAAUU,MAAM,WAAWO,EAAa1B,KAAKkB,MAAMmB,SAASG,oBAN/FL,EAAA,CAAsCX,IAAMC,mFCX/BgB,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,OAAA3C,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,GAAA3C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA2C,EAAA5C,GAAAC,OAAAQ,EAAA,EAAAR,CAAA2C,EAAA,EAAAlC,IAAA,SAAAC,MAAA,WAGQ,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAD,CAAU3B,KAAK,QAAQT,KAAKkB,MAAMwB,YAAYC,QAC9CjC,EAAAC,EAAAC,cAACwB,EAAD,CAAU3B,KAAK,QAAQiB,EAAa1B,KAAKkB,MAAMwB,YAAYJ,aAN3EG,EAAA,CAAqCjB,IAAMC,WCCrCjC,EACO,CACLoD,WAAY,IAIPC,EAAb,SAAAhD,GACI,SAAAgD,EAAY3B,GAAM,IAAA4B,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACdC,EAAAhD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAAE,KAAA/C,KAAMkB,KACD8B,MAAQ,GACTF,EAAK5B,MAAMwB,YAAYO,OAAMH,EAAKE,MAAMC,KAAOH,EAAK5B,MAAMwB,YAAYO,KAAKC,QAAQ,MAAO,SAHhFJ,EADtB,OAAAhD,OAAAO,EAAA,EAAAP,CAAA+C,EAAAhD,GAAAC,OAAAQ,EAAA,EAAAR,CAAA+C,EAAA,EAAAtC,IAAA,WAAAC,MAAA,SAMa2C,GACL,OAAKA,EAAKF,KAENvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAACyC,EAAD,CAAiBX,YAAa1C,KAAKkB,MAAMwB,cACzChC,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY4C,wBAAyB,CAACC,OAAQxD,KAAKgD,MAAMC,QACzDvC,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,OALeD,EAAAC,EAAAC,cAAA,cAP/B,CAAAL,IAAA,aAAAC,MAAA,SAeekC,GACP,GAAIA,EAAYO,KAAM,OAAOzD,IAhBrC,CAAAe,IAAA,SAAAC,MAAA,WAmBQ,OACIE,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACKpD,KAAK0D,SAAS1D,KAAKkB,MAAMwB,aAC1BhC,EAAAC,EAAAC,cAAA,OAAKW,MAAOvB,KAAK2D,WAAW3D,KAAKkB,MAAMwB,cAClC1C,KAAKkB,MAAMwB,YAAYkB,QAAQC,IAAI,SAAAC,GAAC,OAAEpD,EAAAC,EAAAC,cAACiC,EAAD,CAASH,YAAaoB,EAAGvD,IAAKuD,EAAEC,cAvB3FlB,EAAA,CAA6BrB,IAAMC,WCN7BjC,GAAS,CACXwE,KAAM,CAAC9B,QAAS,iBAGP+B,GAAb,SAAApE,GACI,SAAAoE,EAAY/C,GAAM,IAAA4B,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACdnB,EAAAhD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAAlB,KAAA/C,KAAMkB,KACD8B,MAAQ,CACTkB,OAAQpB,EAAK5B,MAAMgD,OACnBC,aAAa,GAEjBC,IAAMC,IAAI,+BAA+BvB,EAAKE,MAAMkB,QAAQI,KAAK,SAAAC,GAC7DzB,EAAK0B,SAAS,CAACC,aAAcF,EAASpB,KAAMgB,aAAa,MAP/CrB,EADtB,OAAAhD,OAAAO,EAAA,EAAAP,CAAAmE,EAAApE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmE,EAAA,EAAA1D,IAAA,SAAAC,MAAA,WAYQ,OAAKR,KAAKgD,MAAMmB,YAEZzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAYQ,MAAM,UAAUI,MAAO/B,GAAOwE,MAA1C,gBAGAtD,EAAAC,EAAAC,cAAC8D,EAAD,CAAShC,YAAa1C,KAAKgD,MAAMyB,gBANL,SAZ5CR,EAAA,CAAkCzC,IAAMC,+BCDlCjC,GAAS,CACXmF,QAAS,CACLC,MAAO,OACPC,gBAAiB,WAErBC,QAAS,CACLpF,OAAQ,YACRwC,QAAS,SAEb6C,QAAS,CAACC,MAAO,UAGRC,GAAb,SAAApF,GAAA,SAAAoF,IAAA,OAAAnF,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,GAAAnF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAmF,EAAApF,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmF,EAAA,EAAA1E,IAAA,gBAAAC,MAAA,SAEkB6B,GACV,MAAoB,UAAhBA,EAAS6C,KAAuBxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAayE,IAAK/C,EAASgD,IAAKC,SAAU,CAAC/D,MAAM/B,GAAOmF,SAAUY,UAAW,kBAAI7E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAkBY,MAAO/B,GAAOsF,aACjI,iBAAhBzC,EAAS6C,KAA8BxE,EAAAC,EAAAC,cAAA,SAAO6E,UAAQ,EAACC,UAAQ,EAACN,IAAK/C,EAASgD,IAAK9D,MAAO/B,GAAOmF,UACjF,SAAhBtC,EAAS6C,KAAsBxE,EAAAC,EAAAC,cAAA,SAAOwE,IAAK/C,EAASgD,IAAK9D,MAAO/B,GAAOmF,eAA3E,IALR,CAAApE,IAAA,gBAAAC,MAAA,WASQmF,OAAOC,KAAK,yBAA2B5F,KAAKkB,MAAMmB,SAASwD,UAAW,YAT9E,CAAAtF,IAAA,SAAAC,MAAA,WAYY,IAAAsC,EAAA9C,KACJ,OACIU,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,KACKX,KAAK+F,cAAc/F,KAAKkB,MAAMmB,UAC/B3B,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,KACID,EAAAC,EAAAC,cAACqF,GAAD,CAAc1E,MAAO/B,GAAO0G,YAAahC,OAAQlE,KAAKkB,MAAMmB,SAAS8D,GAAIC,QAAS,SAACC,GAAD,OAAKvD,EAAKwD,YAAYD,MAD5G,IAEI3F,EAAAC,EAAAC,cAAA,OAAKW,MAAO/B,GAAOuF,SACfrE,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,CAAQQ,MAAM,UAAUiF,QAAS,kBAAItD,EAAK0D,kBAA1C,gBAGA9F,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,CAAQyF,QAAS,kBAAItD,EAAK5B,MAAMuF,iBAAhC,gBAtBxBxB,EAAA,CAAqCzD,IAAMC,WCXrCjC,GAAS,CACXkH,KAAM,CACF9B,MAAO,OACP9C,SAAU,YAEd6E,IAAK,CACD/B,MAAO,IACPgC,OAAQ,IACR5B,MAAO,OACP6B,YAAa,GACbC,OAAQ,WAEZC,WAAY,CACRC,QAAS,IAEbC,MAAO,CACHH,OAAQ,WAEZnC,QAAS,CACL/B,WAAY,IACZsE,cAAe,KAIVC,GAAb,SAAAtH,GAAA,SAAAsH,IAAA,IAAAC,EAAAtE,EAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,GAAA,QAAAE,EAAAjH,UAAAkH,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAArH,UAAAqH,GAAA,OAAA3E,EAAAhD,OAAAG,EAAA,EAAAH,CAAAE,MAAAoH,EAAAtH,OAAAI,EAAA,EAAAJ,CAAAqH,IAAApE,KAAA5C,MAAAiH,EAAA,CAAApH,MAAA0H,OAAAH,MACIvE,MAAQ,CAAC2E,aAAa,GAD1B7E,EAAA,OAAAhD,OAAAO,EAAA,EAAAP,CAAAqH,EAAAtH,GAAAC,OAAAQ,EAAA,EAAAR,CAAAqH,EAAA,EAAA5G,IAAA,gBAAAC,MAAA,WAGYR,KAAKgD,MAAM2E,YAAa3H,KAAKwE,SAAS,CAACmD,aAAa,IACnD3H,KAAKwE,SAAS,CAACmD,aAAa,MAJzC,CAAApH,IAAA,cAAAC,MAAA,WAMiB,IAAAoH,EAAA5H,KACT,GAAIA,KAAKgD,MAAM2E,YAAa,OAAOjH,EAAAC,EAAAC,cAACiH,GAAD,CAAiBxF,SAAUrC,KAAKkB,MAAMmB,SAAUoE,aAAc,kBAAImB,EAAKE,qBAPlH,CAAAvH,IAAA,SAAAC,MAAA,WASa,IAAAuH,EAAA/H,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACX7B,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CAAMY,MAAO/B,GAAOkH,MACZhG,EAAAC,EAAAC,cAACoH,EAAArH,EAAD,CACIY,MAAO/B,GAAOmH,IACdsB,MAAOjI,KAAKkB,MAAMmB,SAAS6F,UAC3B9B,QAAS,WAAK2B,EAAKD,mBAE3BpH,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAaY,MAAO/B,GAAOmF,SACnBjE,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAYY,MAAO/B,GAAOyH,MAAOb,QAAS,WAAK2B,EAAKD,iBAAkBvF,UAAU,aAC3EvC,KAAKkB,MAAMmB,SAAS4E,OAE7BvG,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAYY,MAAO/B,GAAOuH,YAAaoB,IAAOC,IAAIpI,KAAKkB,MAAMmB,SAASgG,SAASC,YAEnF5H,EAAAC,EAAAC,cAAC2H,EAAD,CAAkBlG,SAAUrC,KAAKkB,MAAMmB,YAE1CrC,KAAK2H,mBA1BtBR,EAAA,CAA8B3F,IAAMC,gCCxB9BjC,GAAS,CACXC,KAAM,CACJ+I,SAAU,IACV9I,OAAQ,QAEV+I,SAAU,CACRvG,QAAS,SAEXwG,KAAM,CACFhJ,OAAQ,OACRwC,QAAS,QACTyG,aAAc,IAElBC,QAAS,CACLC,UAAW,WAINC,GAAb,SAAAjJ,GAII,SAAAiJ,EAAY5H,GAAM,IAAA4B,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAA8I,IACdhG,EAAAhD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgJ,GAAA/F,KAAA/C,KAAMkB,KAJV6H,UAAY,GAGMjG,EAFlBE,MAAQ,CAACgG,MAAO,GAAIJ,SAAS,GAEX9F,EAJtB,OAAAhD,OAAAO,EAAA,EAAAP,CAAAgJ,EAAAjJ,GAAAC,OAAAQ,EAAA,EAAAR,CAAAgJ,EAAA,EAAAvI,IAAA,oBAAAC,MAAA,WASQR,KAAKiJ,kBATb,CAAA1I,IAAA,4BAAAC,MAAA,SAY8BU,GAAO,IAAA0G,EAAA5H,KACzBA,KAAKkB,MAAMgI,KAAK7D,MAAQnE,EAAMgI,KAAK7D,MACvCrF,KAAKwE,SAAS,CAACwE,MAAO,KACtBG,WAAW,WAAKvB,EAAKqB,iBAAiB,MAf9C,CAAA1I,IAAA,gBAAAC,MAAA,WAkBmB,IAAAuH,EAAA/H,KACXA,KAAKwE,SAAS,CAACoE,SAAS,IACxBxE,IAAMC,IAAIrE,KAAKkB,MAAMgI,KAAK7D,IAAhB,SAAAqC,OAA+B1H,KAAKgD,MAAMgG,MAAM1B,OAAhD,UAAAI,OAA+D1H,KAAK+I,YAAazE,KAAK,SAAAC,GAC5FwD,EAAKvD,SAAS,CAACoE,SAAS,IACK,GAAzBb,EAAK/E,MAAMgG,MAAM1B,OAAWS,EAAKvD,SAASD,EAASpB,MAEnD4E,EAAKvD,SAAS,CAACwE,MAAOjB,EAAK/E,MAAMgG,MAAMtB,OAAOnD,EAASpB,KAAK6F,aAxB5E,CAAAzI,IAAA,cAAAC,MAAA,WA8BiB,IAAA4I,EAAApJ,KACT,OAAIA,KAAKgD,MAAM4F,QACXlI,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,MACAD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAYQ,MAAM,UAAUI,MAAO/B,GAAOoJ,SAA1C,cACAlI,EAAAC,EAAAC,cAAA,YAIJF,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,CAAQY,MAAO/B,GAAOkJ,KAAMY,QAAQ,YAAYnI,MAAM,UAAUiF,QAAS,kBAAIgD,EAAKH,kBAAlF,cAzCZ,CAAA1I,IAAA,SAAAC,MAAA,WAgDQ,OACIE,EAAAC,EAAAC,cAAA,OAAKW,MAAO/B,GAAOC,MACfiB,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CAAMY,MAAO/B,GAAOgK,KAAMrD,GAAG,YACxBnG,KAAKgD,MAAMgG,MAAMnF,IAAI,SAAA4F,GAAI,OACtB/I,EAAAC,EAAAC,cAAC8I,EAAA/I,EAAD,CAAUY,MAAO/B,GAAOiJ,SAAUlI,IAAKkJ,EAAKtD,IACxCzF,EAAAC,EAAAC,cAAC+I,GAAD,CAAUtH,SAAUoH,QAK/BzJ,KAAK4J,mBA1DtBd,EAAA,CAA8BtH,IAAMC,+FCpB9BjC,GAAS,CACXqK,KAAM,CACFC,SAAU,GAEdC,KAAM,CACFnD,OAAQ,GACRoD,UAAW,EACXpH,WAAY,IAEhBqH,WAAY,CACR9I,MAAO,UAIF+I,GAAb,SAAArK,GAAA,SAAAqK,IAAA,OAAApK,OAAAC,EAAA,EAAAD,CAAAE,KAAAkK,GAAApK,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoK,GAAA/J,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAoK,EAAArK,GAAAC,OAAAQ,EAAA,EAAAR,CAAAoK,EAAA,EAAA3J,IAAA,SAAAC,MAAA,WACY,IAAAsC,EAAA9C,KACJ,OACIU,EAAAC,EAAAC,cAAA,OAAK2B,UAAW/C,GAAOqK,MACnBnJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAQmB,SAAS,UACbpB,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,KACID,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAYQ,MAAM,UAAUmJ,aAAW,OAAOlE,QAAS,kBAAItD,EAAK5B,MAAMqJ,aAClE7J,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,OAEJD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY2I,QAAQ,KAAKnI,MAAM,WAC3BT,EAAAC,EAAAC,cAAA,OAAK6J,IAAI,cAAclJ,MAAO/B,GAAOuK,KAAM3E,IAAI,4BAV3E8E,EAAA,CAAmC1I,IAAMC,gJCd5BiJ,GAAb,SAAA7K,GACI,SAAA6K,EAAYxJ,GAAQ,OAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAA0K,GAAA5K,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4K,GAAA3H,KAAA/C,KACVkB,IAFd,OAAApB,OAAAO,EAAA,EAAAP,CAAA4K,EAAA7K,GAAAC,OAAAQ,EAAA,EAAAR,CAAA4K,EAAA,EAAAnK,IAAA,iBAAAC,MAAA,WAIoB,IAAAsC,EAAA9C,KACZ,OAAOA,KAAKkB,MAAMyJ,YAAY9G,IAAI,SAACqF,GAAS,OACxCxI,EAAAC,EAAAC,cAAC8I,EAAA/I,EAAD,CAAUiK,QAAM,EAACrK,IAAK2I,EAAK2B,KAAMzE,QAAS,kBAAItD,EAAK5B,MAAM4J,mBAAmB5B,KACxExI,EAAAC,EAAAC,cAACmK,GAAApK,EAAD,CAAcqK,QAAS9B,EAAK2B,YAP5C,CAAAtK,IAAA,SAAAC,MAAA,WAWY,IAAAoH,EAAA5H,KACJ,OACIU,EAAAC,EAAAC,cAACqK,GAAAtK,EAAD,CAAQiF,KAAM5F,KAAKkB,MAAM0E,KAAMsF,QAAS,kBAAItD,EAAK1G,MAAMgK,YACnDxK,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,KACKX,KAAKmL,uBAf1BT,EAAA,CAA8BlJ,IAAMC,WCK9B2J,GAAQC,0BAAe,CACzBC,QAAS,CACLN,QAASO,KACTC,UAAWC,KACXC,MAAOC,KACPC,kBAAmB,EACnBC,YAAa,IAEjBC,WAAY,CACRC,iBAAiB,KAInBC,GAAc,CAChB,CAACnB,KAAM,WAAYxF,IAAK,gDACxB,CAACwF,KAAM,UAAWxF,IAAK,+CACvB,CAACwF,KAAM,SAAUxF,IAAK,+CAEb4G,GAAb,SAAApM,GACI,SAAAoM,EAAY/K,GAAM,IAAA4B,EAAA,OAAAhD,OAAAC,EAAA,EAAAD,CAAAE,KAAAiM,IACdnJ,EAAAhD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmM,GAAAlJ,KAAA/C,KAAMkB,KACD8B,MAAQ,CAACkG,KAAM8C,GAAY,GAAIE,cAAc,GAFpCpJ,EADtB,OAAAhD,OAAAO,EAAA,EAAAP,CAAAmM,EAAApM,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmM,EAAA,EAAA1L,IAAA,WAAAC,MAAA,WAMQR,KAAKwE,SAAS,CAAC0H,cAAc,MANrC,CAAA3L,IAAA,YAAAC,MAAA,WASYR,KAAKgD,MAAMkJ,cAAclM,KAAKwE,SAAS,CAAC0H,cAAc,MATlE,CAAA3L,IAAA,aAAAC,MAAA,SAWe2L,GACPnM,KAAKwE,SAAS,CAAC0E,KAAMiD,MAZ7B,CAAA5L,IAAA,SAAAC,MAAA,WAca,IAAAoH,EAAA5H,KACL,OACIU,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAACwL,EAAAzL,EAAD,KACID,EAAAC,EAAAC,cAAA,QAAMyL,IAAI,aAAaC,KAAK,gEAEhC5L,EAAAC,EAAAC,cAAC2L,GAAA,iBAAD,CAAkBnB,MAAOA,IACrB1K,EAAAC,EAAAC,cAAC4L,GAAA7L,EAAD,MACAD,EAAAC,EAAAC,cAAC6L,GAAD,CAAe9B,YAAaqB,GAAazB,SAAU,kBAAI3C,EAAK2C,cAC5D7J,EAAAC,EAAAC,cAAC8L,GAAD,CAAU/B,YAAaqB,GAAapG,KAAM5F,KAAKgD,MAAMkJ,aAAchB,QAAS,kBAAItD,EAAK+E,aAAa7B,mBAAoB,SAACqB,GAAD,OAAKvE,EAAKgF,WAAWT,MAC3IzL,EAAAC,EAAAC,cAACiM,GAAD,CAAU3D,KAAMlJ,KAAKgD,MAAMkG,aAxB/C+C,EAAA,CAA0BzK,IAAMC,WClB1BqL,GAAcC,QACW,cAA7BpH,OAAOqH,SAASC,UAEe,UAA7BtH,OAAOqH,SAASC,UAEhBtH,OAAOqH,SAASC,SAASC,MACvB,2DAuCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT9I,KAAK,SAAAmJ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3K,QACfsK,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAzC,GACLqC,QAAQrC,MAAM,4CAA6CA,KC5FjE0C,IAASC,OACL3N,EAAAC,EAAAC,cAAC0N,GAAD,MACAC,SAASC,eAAe,SDgBrB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB/I,OAAOqH,SAASV,MACpDqC,SAAWhJ,OAAOqH,SAAS2B,OAIvC,OAGFhJ,OAAOiJ,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAA1F,OAAMgH,GAAN,sBAEP5B,IAgEV,SAAiCM,EAAOC,GAEtCwB,MAAMzB,GACH9I,KAAK,SAAAC,GAEJ,IAAMuK,EAAcvK,EAASwK,QAAQ1K,IAAI,gBAEnB,MAApBE,EAASyK,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAM5K,KAAK,SAAAmJ,GACjCA,EAAa0B,aAAa7K,KAAK,WAC7BqB,OAAOqH,SAASoC,aAKpBjC,GAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAqB,CAAwBjC,EAAOC,GAI/BC,UAAUC,cAAc2B,MAAM5K,KAAK,WACjCyJ,QAAQC,IACN,+GAMJb,GAAgBC,EAAOC,MCzC/BE","file":"static/js/main.8e1fb0f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst styles = {\r\n  main: {\r\n      margin: 5,\r\n      zoom: 0.85\r\n  }\r\n};\r\n\r\nexport class InfoChip extends React.Component {\r\n    getIcon(icon){\r\n        if (icon === 'like') return <ThumbUpIcon/>;\r\n        if (icon === 'comment') return <CommentIcon/>;\r\n        if (icon === 'face') return <FaceIcon/>;\r\n        return <div></div>\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Chip\r\n                icon={this.getIcon(this.props.icon)}\r\n                color={this.props.color}\r\n                clickable={this.props.clickable}\r\n                label={this.props.children}\r\n                style={styles.main}\r\n            />\r\n        );\r\n    }\r\n}","import numeral from \"numeral\";\r\n\r\nexport function formatNumber(n){\r\n    if (n>1000) return numeral(n).format('0.0a');\r\n    else return n;\r\n}","import React from 'react';\r\nimport {InfoChip} from \"../utils/infoChip.component\";\r\nimport {formatNumber} from \"../utils/formatNumber.function\";\r\n\r\nconst styles = {\r\n    main: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n    div: {\r\n        display: 'inline-block'\r\n    }\r\n};\r\n\r\nexport class FeedItemMetadata extends React.Component {\r\n    render(){\r\n        return (\r\n            <div style={styles.main}>\r\n                <InfoChip icon='like'>{formatNumber(this.props.postData.score)}</InfoChip>\r\n                <div style={styles.div} className='feedItemMetadata_comments'>\r\n                    <InfoChip icon='comment' color='primary'>{formatNumber(this.props.postData.numComments)}</InfoChip>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {InfoChip} from \"../utils/infoChip.component\";\r\nimport {formatNumber} from \"../utils/formatNumber.function\";\r\n\r\nexport class CommentMetadata extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <InfoChip icon='face'>{this.props.commentData.author}</InfoChip>\r\n                <InfoChip icon='like'>{formatNumber(this.props.commentData.score)}</InfoChip>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {CommentMetadata} from \"./commentMetadata.component\";\r\n\r\nconst styles = {\r\n    replies: {\r\n        marginLeft: 50\r\n    }\r\n};\r\n\r\nexport class Comment extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        if (this.props.commentData.body) this.state.body = this.props.commentData.body.replace(/\\n/g, '<br>');\r\n    }\r\n    showBody(data){\r\n        if (!data.body) return(<div></div>);\r\n        return(\r\n            <React.Fragment>\r\n                <CommentMetadata commentData={this.props.commentData}/>\r\n                <Typography dangerouslySetInnerHTML={{__html: this.state.body}}></Typography>\r\n                <Divider />\r\n            </React.Fragment>);\r\n    }\r\n    isIndented(commentData){\r\n        if (commentData.body) return styles.replies;\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.showBody(this.props.commentData)}\r\n                <div style={this.isIndented(this.props.commentData)}>\r\n                    {this.props.commentData.replies.map(r=><Comment commentData={r} key={r._id}></Comment>)}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from \"axios/index\";\r\nimport {Comment} from './comment.component'\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n    hint: {display: 'inline-block'}\r\n};\r\n\r\nexport class CommentsList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            postId: this.props.postId,\r\n            dataFetched: false\r\n        };\r\n        axios.get('/api/reddit/comments?postId='+this.state.postId).then(response => {\r\n            this.setState({commentsRoot: response.data, dataFetched: true});\r\n        });\r\n    }\r\n    render() {\r\n        if (!this.state.dataFetched) return null;\r\n        return (\r\n            <React.Fragment>\r\n                <Typography color=\"primary\" style={styles.hint}>\r\n                    Top comments\r\n                </Typography>\r\n                <Comment commentData={this.state.commentsRoot}></Comment>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ImageLoader from 'react-imageloader';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {CommentsList} from \"../comments/commentsList.component\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst styles = {\r\n    content: {\r\n        width: '100%',\r\n        backgroundColor: '#1b1b1b'\r\n    },\r\n    spinner: {\r\n        margin: '30px auto',\r\n        display: 'block',\r\n    },\r\n    buttons: {float: 'right'}\r\n};\r\n\r\nexport class FeedItemContent extends React.Component {\r\n\r\n    renderContent(postData){\r\n        if (postData.type==='image') return <ImageLoader src={postData.url} imgProps={{style:styles.content}} preloader={()=><CircularProgress style={styles.spinner}/>}/>;\r\n        if (postData.type==='hosted:video') return <video controls autoPlay src={postData.url} style={styles.content}/>;\r\n        if (postData.type==='link') return <embed src={postData.url} style={styles.content}/>;\r\n    }\r\n\r\n    openSourceUrl(){\r\n        window.open('https://www.reddit.com' + this.props.postData.permalink, \"_blank\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Card>\r\n                {this.renderContent(this.props.postData)}\r\n                <CardContent>\r\n                    <CommentsList style={styles.commentList} postId={this.props.postData.id} onClick={(e)=>this.handleClick(e)}/>;\r\n                    <div style={styles.buttons}>\r\n                        <Button color=\"primary\" onClick={()=>this.openSourceUrl()}>\r\n                            All Comments\r\n                        </Button>\r\n                        <Button onClick={()=>this.props.closeContent()}>\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport {FeedItemMetadata} from './feedItemMetadata.component';\r\nimport moment from \"moment/moment\";\r\nimport {FeedItemContent} from \"./feedItemContent.component\";\r\n\r\nconst styles = {\r\n    card: {\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    img: {\r\n        width: 150,\r\n        height: 100,\r\n        float: 'left',\r\n        marginRight: 10,\r\n        cursor: 'pointer'\r\n    },\r\n    datePosted: {\r\n        opacity: 0.8\r\n    },\r\n    title: {\r\n        cursor: 'pointer'\r\n    },\r\n    content: {\r\n        marginLeft: 150,\r\n        paddingBottom: 40\r\n    }\r\n};\r\n\r\nexport class FeedItem extends React.Component {\r\n    state = {showContent: false,};\r\n    toggleContent(){\r\n        if (this.state.showContent) this.setState({showContent: false});\r\n        else this.setState({showContent: true});\r\n    }\r\n    showContent(){\r\n        if (this.state.showContent) return <FeedItemContent postData={this.props.postData} closeContent={()=>this.toggleContent()}/>;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='feedItem'>\r\n                <Card style={styles.card}>\r\n                        <CardMedia\r\n                            style={styles.img}\r\n                            image={this.props.postData.thumbnail}\r\n                            onClick={()=>{this.toggleContent()}}\r\n                        />\r\n                    <CardContent style={styles.content}>\r\n                            <Typography style={styles.title} onClick={()=>{this.toggleContent()}} className='postTitle'>\r\n                                {this.props.postData.title}\r\n                            </Typography>\r\n                        <Typography style={styles.datePosted}>{moment.utc(this.props.postData.dateUtc).fromNow()}</Typography>\r\n                    </CardContent>\r\n                    <FeedItemMetadata postData={this.props.postData}/>\r\n                </Card>\r\n                {this.showContent()}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {FeedItem} from './feedItem.component';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n    main: {\r\n      maxWidth: 760,\r\n      margin: 'auto'\r\n    },\r\n    listItem: {\r\n      display: 'block'\r\n    },\r\n    more: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        marginBottom: 50\r\n    },\r\n    loading: {\r\n        textAlign: 'center'\r\n    }\r\n};\r\n\r\nexport class FeedList extends React.Component {\r\n    chunkSize = 10;\r\n    state = {posts: [], loading: true};\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadMorePosts();\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (this.props.feed.url === props.feed.url) return;\r\n        this.setState({posts: []});\r\n        setTimeout(()=>{this.loadMorePosts()},0);\r\n    }\r\n\r\n    loadMorePosts(){\r\n        this.setState({loading: true});\r\n        axios.get(this.props.feed.url + `&from=${this.state.posts.length}&size=${this.chunkSize}`).then(response => {\r\n            this.setState({loading: false});\r\n            if (this.state.posts.length==0) this.setState(response.data);\r\n            else {\r\n                this.setState({posts: this.state.posts.concat(response.data.posts)});\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    showLoading(){\r\n        if (this.state.loading) return (\r\n            <React.Fragment>\r\n                <br/>\r\n                <LinearProgress />\r\n                <br/>\r\n                <Typography color=\"primary\" style={styles.loading}>Loading...</Typography>\r\n                <br/>\r\n            </React.Fragment>\r\n        );\r\n        else return (\r\n            <Button style={styles.more} variant=\"contained\" color=\"primary\" onClick={()=>this.loadMorePosts()}>\r\n                More Fun\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.main}>\r\n                <List style={styles.list} id='feedList'>\r\n                    {this.state.posts.map(post=>\r\n                        <ListItem style={styles.listItem} key={post.id}>\r\n                            <FeedItem postData={post}></FeedItem>\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n\r\n                {this.showLoading()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    logo: {\r\n        height: 42,\r\n        marginTop: 8,\r\n        marginLeft: 20\r\n    },\r\n    feedChoice: {\r\n        color: 'white'\r\n    }\r\n};\r\n\r\nexport class SlackerAppBar extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className={styles.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={()=>this.props.openMenu()}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            <img alt='4slack logo' style={styles.logo} src='./logo-rect.png'/>\r\n                        </Typography>\r\n                        {/*{this.props.feedOptions.map((feed)=><Button style={styles.feedChoice} onClick={()=>{this.props.onClick(feed)}}>{feed.name}</Button>)}*/}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nexport class LeftMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    getFeedOptions(){\r\n        return this.props.feedOptions.map((feed)=>{ return(\r\n            <ListItem button key={feed.name} onClick={()=>this.props.onSelectFeedSource(feed)}>\r\n                <ListItemText primary={feed.name} />\r\n            </ListItem>\r\n        )});\r\n    }\r\n    render(){\r\n        return(\r\n            <Drawer open={this.props.open} onClose={()=>this.props.onClose()}>\r\n                <List>\r\n                    {this.getFeedOptions()}\r\n                </List>\r\n            </Drawer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport {FeedList} from \"../feed/feedList.component\";\r\nimport {SlackerAppBar} from \"./appBar.component\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\nimport {LeftMenu} from \"./leftMenu.component\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        error: red,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n\r\nconst FeedOptions = [\r\n    {name: '/r/Funny', url: '/api/reddit/feed?subreddit=funny&channel=hot'},\r\n    {name: '/r/Pics', url: '/api/reddit/feed?subreddit=pics&channel=hot'},\r\n    {name: '/r/Aww', url: '/api/reddit/feed?subreddit=aww&channel=hot'}\r\n];\r\nexport class Main extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {feed: FeedOptions[0], leftMenuOpen: false};\r\n    }\r\n    openMenu(){\r\n        this.setState({leftMenuOpen: true})\r\n    }\r\n    closeMenu(){\r\n        if (this.state.leftMenuOpen) this.setState({leftMenuOpen: false})\r\n    }\r\n    selectFeed(f){\r\n        this.setState({feed: f})\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>\r\n                    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"/>\r\n                </MetaTags>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <SlackerAppBar feedOptions={FeedOptions} openMenu={()=>this.openMenu()}></SlackerAppBar>\r\n                    <LeftMenu feedOptions={FeedOptions} open={this.state.leftMenuOpen} onClose={()=>this.closeMenu()} onSelectFeedSource={(f)=>this.selectFeed(f)}></LeftMenu>\r\n                    <FeedList feed={this.state.feed}></FeedList>\r\n                </MuiThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Main} from './modules/main/main.component';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}