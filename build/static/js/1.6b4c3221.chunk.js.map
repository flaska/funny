{"version":3,"sources":["modules/utils/functions/localStorage.service.js","modules/utils/functions/feedsCache.provider.js","shared/redditFeeds.js","modules/utils/functions/analytics.service.js","modules/leftMenu/leftMenu.component.js"],"names":["LocalStorage","key","item","window","localStorage","setItem","JSON","stringify","parse","getItem","e","console","error","getDefaultFeeds","require","getReactFeeds","FeedsCacheProvider","localStorageFeeds2","getData","allFeeds","forEach","f","indexOf","tag","enabled","feeds","toStore","filter","map","saveData","this","getAllFeeds","getEnabledFeeds","feedName","fullName","icon","defaultEnabled","reactFeed","jsonFeed","name","nodeFeed","exports","getNodeFeeds","analytics","A","Analytics","feed","dataLayer","push","event","switchFeedTarget","LeftMenuSettings","React","lazy","Promise","all","__webpack_require__","then","bind","styles","feedsTitle","marginTop","marginLeft","feedsIcon","marginRight","display","settingsIcon","float","link","textDecoration","facebookLike","margin","LeftMenu","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","settingsOpen","onSelectFeedSource","triggerSwitchFeed","_this2","react_default","a","createElement","Link","to","concat","style","ListItem_default","button","onClick","className","id","ListItemIcon_default","feedIcon","Typography_default","color","provideIcon","ListItemText_default","primary","setState","_this3","lazyLoad_component","loadingFallback","dialogLoading_component","errorFallback","lazyLoadError_component","message","open","onClose","toggleSettings","feedbackDialogOpen","_this4","Fragment","Drawer_default","variant","RssFeed_default","IconButton_default","Settings_default","List_default","getFeedOptions","data-href","data-layout","data-action","data-size","data-show-faces","data-share","renderSettings","Component"],"mappings":"4GAAqBA,wGACDC,EAAKC,GACjB,OAAOC,OAAOC,aAAaC,QAAQJ,EAAKK,KAAKC,UAAUL,oCAG5CD,GACX,IACI,OAAOK,KAAKE,MAAML,OAAOC,aAAaK,QAAQR,IAChD,MAAMS,GACJC,QAAQC,MAAMF,6CCR1B,IAAMG,EAAkBC,EAAQ,KAA+BC,cAE1CC,6GAEb,IAAIC,EAAqBjB,EAAakB,QAAQ,kBAC9C,GAAID,EAAoB,CACpB,IAAIE,EAAWN,IAKf,OAJAM,EAASC,QAAQ,SAAAC,IAC4B,IAArCJ,EAAmBK,QAAQD,EAAEE,KAAWF,EAAEG,SAAU,EACnDH,EAAEG,SAAU,IAEdL,EAEX,OAAON,8CAGcY,GACrB,IAAIC,EAAUD,EAAME,OAAO,SAAAN,GAAC,OAAEA,EAAEG,UAASI,IAAI,SAAAP,GAAC,OAAEA,EAAEE,MAClDvB,EAAa6B,SAAS,iBAAkBH,6CAIxC,OAAOI,KAAKC,cAAcJ,OAAO,SAAAN,GAAC,OAAEA,EAAEG,mDAItC,OAAOM,KAAKE,kBAAkB,yCAGbC,GACjB,OAAOH,KAAKE,kBAAkBL,OAAO,SAAAN,GAAC,OAAEA,EAAEE,MAAMU,IAAU,+BC/BlE,IAAIR,EAAQ,CACR,CAACS,SAAU,sBAAuBX,IAAK,QAASY,KAAM,8BAA+BC,gBAAgB,GACrG,CAACF,SAAU,cAAeX,IAAK,MAAOY,KAAM,SAAUC,gBAAgB,GACtE,CAACF,SAAU,qBAAsBX,IAAK,oBAAqBY,KAAM,cAAeC,gBAAgB,GAChG,CAACF,SAAU,YAAaX,IAAK,WAAYY,KAAM,gBAAiBC,gBAAgB,GAChF,CAACF,SAAU,aAAcX,IAAK,SAAUY,KAAM,eAAgBC,gBAAgB,GAC9E,CAACF,SAAU,mBAAoBX,IAAK,OAAQY,KAAM,kBAAmBC,gBAAgB,GACrF,CAACF,SAAU,UAAWX,IAAK,UAAWY,KAAM,WAAYC,gBAAgB,GAExE,CAACF,SAAU,QAASX,IAAK,QAASY,KAAM,oBAAqBC,gBAAgB,GAC7E,CAACF,SAAU,oBAAqBX,IAAK,oBAAqBY,KAAM,SAAUC,gBAAgB,IAG9F,SAASC,EAAUC,GACf,MAAO,CAACC,KAAMD,EAASJ,SAAUC,KAAMG,EAASH,KAAMX,QAASc,EAASF,eAAgBb,IAAKe,EAASf,KAG1G,SAASiB,EAASF,GACd,OAAOA,EAASf,IAGpBkB,EAAQ1B,cAAgB,kBAAIU,EAAMG,IAAIS,IACtCI,EAAQC,aAAe,kBAAIjB,EAAMG,IAAIY,wTCtBrCrC,OAAOwC,UAAY,GACnB,IAAIC,EAAIzC,OAAOwC,UAGME,uGACFtB,GACXqB,EAAEE,KAAOvB,4CAGYA,GACrBpB,OAAO4C,UAAUC,KAAK,CAACC,MAAS,mBAAoBC,iBAAoB3B,mDCUhF,IAAM4B,EAAmBC,IAAMC,KAAK,kBAAOC,QAAAC,IAAA,CAAAC,EAAA9C,EAAA,GAAA8C,EAAA9C,EAAA,KAAA+C,KAAAD,EAAAE,KAAA,aAErCC,EAAS,CACXC,WAAY,CACRC,UAAW,GACXC,WAAY,IAEhBC,UAAW,CACPC,YAAa,GACbH,UAAW,EACXI,QAAS,gBAEbC,aAAc,CACVC,MAAO,QACPH,YAAa,GACbF,WAAY,IAEhBM,KAAM,CACFC,eAAgB,QAEpBC,aAAc,CACVC,OAAQ,aAIKC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7C,KAAA0C,IACfE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7C,KAAA6C,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAjD,KAAM2C,KACDO,MAAQ,CAACC,cAAc,GAFbP,kFAIArD,GACfS,KAAK2C,MAAMS,qBACXrC,EAAUsC,kBAAkB9D,EAAEE,8CAElB,IAAA6D,EAAAtD,KACZ,OAAOd,IAAmBgB,kBAAkBJ,IAAI,SAACkB,GAAS,OACtDuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,MAAAC,OAAQ5C,EAAKvB,KAAOtB,IAAK6C,EAAKP,KAAMoD,MAAOhC,EAAOS,MACtDiB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,QAAS,kBAAIV,EAAKF,mBAAmBpC,IAAOiD,UAAU,sBAAuBC,GAAI,6BAA+BlD,EAAKvB,KAClI8D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAcK,MAAOhC,EAAOuC,SAAUH,UAAU,yBAC5CV,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYc,MAAM,WAAWC,YAAYvD,EAAKX,QAElDkD,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAcc,MAAM,UAAUG,QAASlB,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYc,MAAM,WAAWtD,EAAKP,MAAoBwD,UAAU,uEAM/GjE,KAAKkD,MAAMC,aAAcnD,KAAK0E,SAAS,CAACvB,cAAc,IACrDnD,KAAK0E,SAAS,CAACvB,cAAc,6CAEtB,IAAAwB,EAAA3E,KACZ,GAAIA,KAAKkD,MAAMC,aAAc,OACzBI,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUC,gBAAkBtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MAAmBC,cAAexB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAeC,QAAQ,wCACjF1B,EAAAC,EAAAC,cAACpC,EAAD,CAAkB6D,KAAMlF,KAAKkD,MAAMC,aAAcgC,QAAS,kBAAIR,EAAKS,oEAIvEpF,KAAKkD,MAAMmC,mBAAoBrF,KAAK0E,SAAS,CAACW,oBAAoB,IACjErF,KAAK0E,SAAS,CAACW,oBAAoB,qCAEpC,IAAAC,EAAAtF,KACJ,OACIuD,EAAAC,EAAAC,cAACF,EAAAC,EAAM+B,SAAP,KACIhC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAAQ0B,KAAMlF,KAAK2C,MAAMuC,KAAMC,QAAS,kBAAIG,EAAK3C,MAAMwC,WAAWjB,GAAG,YACjEX,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYiC,QAAQ,KAAK5B,MAAOhC,EAAOC,YACnCyB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAaK,MAAOhC,EAAOI,YAD/B,QAGIsB,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAYc,MAAM,UAAUJ,GAAG,uBAAuBL,MAAOhC,EAAOO,aAAc4B,QAAS,kBAAIsB,EAAKF,mBAChG7B,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,QAGRD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACKxD,KAAK8F,kBAEVvC,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,UAAU8B,YAAU,0BAA0BC,cAAY,eAAenC,MAAOhC,EAAOW,aACjGyD,cAAY,OAAOC,YAAU,QAAQC,kBAAgB,QAAQC,aAAW,WAEhFpG,KAAKqG,yBApDgB/E,IAAMgF","file":"static/js/1.6b4c3221.chunk.js","sourcesContent":["export default class LocalStorage{\r\n    static saveData(key, item) {\r\n        return window.localStorage.setItem(key, JSON.stringify(item));\r\n    }\r\n\r\n    static getData(key) {\r\n        try {\r\n            return JSON.parse(window.localStorage.getItem(key));\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import LocalStorage from \"./localStorage.service\";\r\nconst getDefaultFeeds = require('../../../shared/redditFeeds').getReactFeeds;\r\n\r\nexport default class FeedsCacheProvider {\r\n    static getAllFeeds(){\r\n        let localStorageFeeds2 = LocalStorage.getData('redditFeeds_v2');\r\n        if (localStorageFeeds2) {\r\n            let allFeeds = getDefaultFeeds();\r\n            allFeeds.forEach(f=>{\r\n                if (localStorageFeeds2.indexOf(f.tag)!==-1) f.enabled = true;\r\n                else f.enabled = false;\r\n            });\r\n            return allFeeds;\r\n        }\r\n        return getDefaultFeeds();\r\n    }\r\n\r\n    static saveSelectedFeeds(feeds){\r\n        let toStore = feeds.filter(f=>f.enabled).map(f=>f.tag);\r\n        LocalStorage.saveData('redditFeeds_v2', toStore);\r\n    }\r\n\r\n    static getEnabledFeeds() {\r\n        return this.getAllFeeds().filter(f=>f.enabled);\r\n    }\r\n\r\n    static getDefaultFeed(){\r\n        return this.getEnabledFeeds()[0];\r\n    }\r\n\r\n    static getFeedByName(feedName){\r\n        return this.getEnabledFeeds().filter(f=>f.tag===feedName)[0];\r\n    }\r\n}","let feeds = [\r\n    {fullName: 'Funny Pics & Videos', tag: 'funny', icon: 'md_sentiment_very_satisfied', defaultEnabled: true},\r\n    {fullName: 'Aww Animals', tag: 'aww', icon: 'fa_paw', defaultEnabled: true},\r\n    {fullName: 'Mildly Interesting', tag: 'mildlyinteresting', icon: 'fa_surprise', defaultEnabled: true},\r\n    {fullName: 'Facepalm!', tag: 'facepalm', icon: 'fa_hand-paper', defaultEnabled: true},\r\n    {fullName: 'Web Comics', tag: 'comics', icon: 'fa_book-open', defaultEnabled: true},\r\n    {fullName: 'Interesting Pics', tag: 'pics', icon: 'md_photo_camera', defaultEnabled: true},\r\n    {fullName: 'History', tag: 'history', icon: 'fa_clock', defaultEnabled: true},\r\n\r\n    {fullName: 'Earth', tag: 'earth', icon: 'fa_globe-americas', defaultEnabled: false},\r\n    {fullName: 'Troll Chromosomes', tag: 'TrollXChromosomes', icon: 'fa_dna', defaultEnabled: false},\r\n];\r\n\r\nfunction reactFeed(jsonFeed){\r\n    return {name: jsonFeed.fullName, icon: jsonFeed.icon, enabled: jsonFeed.defaultEnabled, tag: jsonFeed.tag};\r\n}\r\n\r\nfunction nodeFeed(jsonFeed){\r\n    return jsonFeed.tag;\r\n}\r\n\r\nexports.getReactFeeds = ()=>feeds.map(reactFeed);\r\nexports.getNodeFeeds = ()=>feeds.map(nodeFeed);","window.analytics = {};\r\nlet A = window.analytics;\r\n\r\n\r\nexport default class Analytics {\r\n    static setFeed(tag){\r\n        A.feed = tag;\r\n    }\r\n\r\n    static triggerSwitchFeed(tag){\r\n        window.dataLayer.push({'event': 'switchFeedCustom', 'switchFeedTarget': tag});\r\n    }\r\n}","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {provideIcon} from '../utils/functions/icon.service';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LazyLoad from \"../utils/components/lazyLoad.component\";\r\nimport DialogLoading from \"../utils/components/dialogLoading.component\";\r\nimport LazyLoadError from \"../utils/components/lazyLoadError.component\";\r\n\r\nimport FeedsCacheProvider from '../utils/functions/feedsCache.provider'\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport Analytics from \"../utils/functions/analytics.service\";\r\n\r\nconst LeftMenuSettings = React.lazy(() =>  import(\"./leftMenuSettings.component\"));\r\n\r\nconst styles = {\r\n    feedsTitle: {\r\n        marginTop: 15,\r\n        marginLeft: 25,\r\n    },\r\n    feedsIcon: {\r\n        marginRight: 10,\r\n        marginTop: 7,\r\n        display: 'inline-block'\r\n    },\r\n    settingsIcon: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        marginLeft: 15\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    facebookLike: {\r\n        margin: '7px 23px'\r\n    }\r\n};\r\n\r\nexport default class LeftMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {settingsOpen: false};\r\n    }\r\n    onSelectFeedSource(f){\r\n        this.props.onSelectFeedSource();\r\n        Analytics.triggerSwitchFeed(f.tag);\r\n    }\r\n    getFeedOptions(){\r\n        return FeedsCacheProvider.getEnabledFeeds().map((feed)=>{ return(\r\n            <Link to={`/f/${feed.tag}`} key={feed.name} style={styles.link}>\r\n                <ListItem button onClick={()=>this.onSelectFeedSource(feed)} className='leftMenu_feedSource'  id={'leftMenu_changeSourceLink_' + feed.tag}>\r\n                    <ListItemIcon style={styles.feedIcon} className='leftMenu_selectSource'>\r\n                        <Typography color='primary'>{provideIcon(feed.icon)}</Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText color='primary' primary={<Typography color='primary'>{feed.name}</Typography>} className='leftMenu_selectSource'/>\r\n                </ListItem>\r\n            </Link>\r\n        )});\r\n    }\r\n    toggleSettings(){\r\n        if (this.state.settingsOpen) this.setState({settingsOpen: false});\r\n        else this.setState({settingsOpen: true});\r\n    }\r\n    renderSettings(){\r\n        if (this.state.settingsOpen) return (\r\n            <LazyLoad loadingFallback={(<DialogLoading/>)} errorFallback={<LazyLoadError message='Offline... cannot open settings...'/>}>\r\n                <LeftMenuSettings open={this.state.settingsOpen} onClose={()=>this.toggleSettings()}/>\r\n            </LazyLoad>);\r\n    }\r\n    toggleFeedbackDialog(){\r\n        if (this.state.feedbackDialogOpen) this.setState({feedbackDialogOpen: false});\r\n        else this.setState({feedbackDialogOpen: true});\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Drawer open={this.props.open} onClose={()=>this.props.onClose()} id='leftMenu'>\r\n                    <Typography variant=\"h5\" style={styles.feedsTitle}>\r\n                        <RssFeedIcon style={styles.feedsIcon}/>\r\n                        Feeds\r\n                        <IconButton color='primary' id='openLeftMenuSettings' style={styles.settingsIcon} onClick={()=>this.toggleSettings()}>\r\n                            <SettingsIcon/>\r\n                        </IconButton>\r\n                    </Typography>\r\n                    <List>\r\n                        {this.getFeedOptions()}\r\n                    </List>\r\n                    <div className=\"fb-like\" data-href=\"https://www.4slack.com/\" data-layout=\"button_count\" style={styles.facebookLike}\r\n                         data-action=\"like\" data-size=\"small\" data-show-faces=\"false\" data-share=\"false\"></div>\r\n                </Drawer>\r\n                {this.renderSettings()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}