{"version":3,"sources":["modules/leftMenu/leftMenuSettings.component.js"],"names":["styles","feedIcon","marginRight","marginLeft","buttons","textAlign","margin","LeftMenuSettings","props","_this","Object","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","feedOptions","getAllFeeds","_this2","map","feed","i","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_10___default","button","key","name","className","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_13___default","checked","enabled","onChange","setState","color","id","tag","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_11___default","style","provideIcon","icon","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_12___default","primary","saveSelectedFeeds","onClose","_this3","_this$props","other","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_8___default","assign","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_7___default","getFeedOptions","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_14___default","onClick","variant","React","Component"],"mappings":"uVAWMA,EAAS,CACXC,SAAU,CACNC,YAAa,EACbC,WAAY,IAEhBC,QAAS,CACLC,UAAW,QACXC,OAAQ,KAMKC,cAIjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAJVQ,MAAQ,CACJC,YAAaC,eAEET,gFAIH,IAAAU,EAAAP,KACZ,OAAOA,KAAKI,MAAMC,YAAYG,IAAI,SAACC,EAAMC,GAAM,OAC3CC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,QAAM,EAACC,IAAKP,EAAKQ,KAAMC,UAAU,uBACvCP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACIQ,QAASX,EAAKY,QACdC,SAAU,WACNf,EAAKH,MAAMC,YAAYK,GAAGW,SAAWd,EAAKH,MAAMC,YAAYK,GAAGW,QAC/Dd,EAAKgB,SAAS,CAAClB,YAAaE,EAAKH,MAAMC,eAE3CmB,MAAM,UACNC,GAAI,oBAAoBhB,EAAKiB,MAEjCf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAcgB,MAAOxC,EAAOC,SAAU6B,UAAU,yBAC3CW,YAAYpB,EAAKqB,OAEtBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAcoB,QAASvB,EAAKQ,KAAMC,UAAU,yEAMpDe,YAAkBjC,KAAKI,MAAMC,aAC7BL,KAAKJ,MAAMsC,2CAGP,IAAAC,EAAAnC,KAAAoC,EACyBpC,KAAKJ,MAA3BsC,EADHE,EACGF,QAAYG,EADfvC,OAAAwC,EAAA,EAAAxC,CAAAsC,EAAA,aAEJ,OACIzB,EAAAC,EAAAC,cAAC0B,EAAA3B,EAADd,OAAA0C,OAAA,CAAQN,QAASA,GAAaG,EAA9B,CAAqCZ,GAAG,0BACpCd,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,qCACCZ,KAAK0C,iBACN/B,EAAAC,EAAAC,cAAA,OAAKe,MAAOxC,EAAOI,SACfmB,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAQgC,QAASV,GAAjB,UACAvB,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAQgC,QAAS,kBAAIT,EAAKF,qBAAqBY,QAAQ,YAAYrB,MAAM,YAAYC,GAAG,yBAAxF,iBAzC0BqB,IAAMC","file":"static/js/3.b6f3e9bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {provideIcon} from \"../utils/functions/icon.service\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport {getAllFeeds, saveSelectedFeeds} from '../utils/functions/feeds.provider';\r\n\r\nconst styles = {\r\n    feedIcon: {\r\n        marginRight: 0,\r\n        marginLeft: 10\r\n    },\r\n    buttons: {\r\n        textAlign: 'right',\r\n        margin: 15\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default class LeftMenuSettings extends React.Component {\r\n    state = {\r\n        feedOptions: getAllFeeds()\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getFeedOptions(){\r\n        return this.state.feedOptions.map((feed, i)=>{ return(\r\n            <ListItem button key={feed.name} className='leftMenu_feedSource'>\r\n                <Checkbox\r\n                    checked={feed.enabled}\r\n                    onChange={()=>{\r\n                        this.state.feedOptions[i].enabled = !this.state.feedOptions[i].enabled;\r\n                        this.setState({feedOptions: this.state.feedOptions})\r\n                    }}\r\n                    color=\"primary\"\r\n                    id={'leftMenuSettings_'+feed.tag}\r\n                />\r\n                <ListItemIcon style={styles.feedIcon} className='leftMenu_selectSource'>\r\n                    {provideIcon(feed.icon)}\r\n                </ListItemIcon>\r\n                <ListItemText primary={feed.name} className='leftMenu_selectSource'/>\r\n            </ListItem>\r\n        )});\r\n    }\r\n\r\n    saveSelectedFeeds(){\r\n        saveSelectedFeeds(this.state.feedOptions);\r\n        this.props.onClose();\r\n    }\r\n\r\n    render(){\r\n        const {onClose, ...other } = this.props;\r\n        return(\r\n            <Dialog onClose={onClose} {...other} id='leftMenuSettingDialog'>\r\n                <DialogTitle>Show/Hide Feeds in Left Menu</DialogTitle>\r\n                {this.getFeedOptions()}\r\n                <div style={styles.buttons}>\r\n                    <Button onClick={onClose}>Cancel</Button>\r\n                    <Button onClick={()=>this.saveSelectedFeeds()} variant=\"contained\" color=\"secondary\" id='leftMenuSettings_save'>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}