{"version":3,"sources":["modules/leftMenu/leftMenu.component.js"],"names":["LeftMenuSettings","React","lazy","Promise","all","__webpack_require__","e","then","bind","FeedbackDialog","styles","feedsTitle","marginTop","marginLeft","feedsIcon","marginRight","display","settingsIcon","float","feedbackIcon","transform","about","margin","link","textDecoration","LeftMenu","props","_this","Object","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_DEV_SRC_REACT_funny_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","settingsOpen","f","onSelectFeedSource","Analytics","setFeed","tag","_this2","FeedsProvider","getEnabledFeeds","map","feed","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_23__","to","concat","key","name","style","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_8___default","button","onClick","className","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10___default","feedIcon","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_14___default","color","provideIcon","icon","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_9___default","primary","setState","_this3","_utils_components_lazyLoad_component__WEBPACK_IMPORTED_MODULE_17__","loadingFallback","_utils_components_dialogLoading_component__WEBPACK_IMPORTED_MODULE_18__","errorFallback","_utils_components_lazyLoadError_component__WEBPACK_IMPORTED_MODULE_19__","message","open","onClose","toggleSettings","feedbackDialogOpen","_this4","toggleFeedbackDialog","_this5","Fragment","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_6___default","id","variant","_material_ui_icons_RssFeed__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_icons_Settings__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_7___default","getFeedOptions","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_15___default","_material_ui_core_es_Button_Button__WEBPACK_IMPORTED_MODULE_21__","react_icons_fa__WEBPACK_IMPORTED_MODULE_22__","renderSettings","renderFeedbackDialog","Component"],"mappings":"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","file":"static/js/1.f9c490c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {provideIcon} from '../utils/functions/icon.service';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LazyLoad from \"../utils/components/lazyLoad.component\";\r\nimport DialogLoading from \"../utils/components/dialogLoading.component\";\r\nimport LazyLoadError from \"../utils/components/lazyLoadError.component\";\r\n\r\nimport FeedsProvider from '../utils/functions/feeds.provider'\r\nimport Button from \"@material-ui/core/es/Button/Button\";\r\nimport {FaComment} from 'react-icons/fa';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport Analytics from \"../utils/functions/analytics.service\";\r\n\r\nconst LeftMenuSettings = React.lazy(() =>  import(\"./leftMenuSettings.component\"));\r\nconst FeedbackDialog = React.lazy(() =>  import(\"./feedbackDialog.component\"));\r\n\r\nconst styles = {\r\n    feedsTitle: {\r\n        marginTop: 15,\r\n        marginLeft: 25,\r\n    },\r\n    feedsIcon: {\r\n        marginRight: 10,\r\n        marginTop: 7,\r\n        display: 'inline-block'\r\n    },\r\n    settingsIcon: {\r\n        float: 'right',\r\n        marginRight: 15,\r\n        marginLeft: 15\r\n    },\r\n    feedbackIcon: {\r\n        transform: 'scaleX(-1)'\r\n    },\r\n    about: {\r\n        margin: 20\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n};\r\n\r\nexport default class LeftMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {settingsOpen: false};\r\n    }\r\n    onSelectFeedSource(f){\r\n        this.props.onSelectFeedSource();\r\n        Analytics.setFeed(f.tag);\r\n    }\r\n    getFeedOptions(){\r\n        return FeedsProvider.getEnabledFeeds().map((feed)=>{ return(\r\n            <Link to={`/f/${feed.tag}`} key={feed.name} style={styles.link}>\r\n                <ListItem button onClick={()=>this.onSelectFeedSource(feed)} className='leftMenu_feedSource'>\r\n                    <ListItemIcon style={styles.feedIcon} className='leftMenu_selectSource'>\r\n                        <Typography color='primary'>{provideIcon(feed.icon)}</Typography>\r\n                    </ListItemIcon>\r\n                    <ListItemText color='primary' primary={<Typography color='primary'>{feed.name}</Typography>} className='leftMenu_selectSource'/>\r\n                </ListItem>\r\n            </Link>\r\n        )});\r\n    }\r\n    toggleSettings(){\r\n        if (this.state.settingsOpen) this.setState({settingsOpen: false});\r\n        else this.setState({settingsOpen: true});\r\n    }\r\n    renderSettings(){\r\n        if (this.state.settingsOpen) return (\r\n            <LazyLoad loadingFallback={(<DialogLoading/>)} errorFallback={<LazyLoadError message='Offline... cannot open settings...'/>}>\r\n                <LeftMenuSettings open={this.state.settingsOpen} onClose={()=>this.toggleSettings()}/>\r\n            </LazyLoad>);\r\n    }\r\n    toggleFeedbackDialog(){\r\n        if (this.state.feedbackDialogOpen) this.setState({feedbackDialogOpen: false});\r\n        else this.setState({feedbackDialogOpen: true});\r\n    }\r\n    renderFeedbackDialog(){\r\n        if (this.state.feedbackDialogOpen) return (\r\n            <LazyLoad loadingFallback={(<DialogLoading/>)} errorFallback={<LazyLoadError message='Offline...'/>}>\r\n                <FeedbackDialog open={this.state.feedbackDialogOpen} onClose={()=>this.toggleFeedbackDialog()}/>\r\n            </LazyLoad>);\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Drawer open={this.props.open} onClose={()=>this.props.onClose()} id='leftMenu'>\r\n                    <Typography variant=\"h5\" style={styles.feedsTitle}>\r\n                        <RssFeedIcon style={styles.feedsIcon}/>\r\n                        Feeds\r\n                        <IconButton color='primary' id='openLeftMenuSettings' style={styles.settingsIcon} onClick={()=>this.toggleSettings()}>\r\n                            <SettingsIcon/>\r\n                        </IconButton>\r\n                    </Typography>\r\n                    <List>\r\n                        {this.getFeedOptions()}\r\n                    </List>\r\n                    <Divider/>\r\n                    <br/><br/>\r\n                    <Typography variant=\"h5\"  style={styles.feedsTitle}>\r\n                        About 4slack\r\n                    </Typography>\r\n                    <div style={styles.about}>\r\n                        <Button color=\"primary\" onClick={()=>this.toggleFeedbackDialog()} id='#openFeedback'>\r\n                            <FaComment style={styles.feedbackIcon}/>&nbsp;Feedback\r\n                        </Button>\r\n                    </div>\r\n                </Drawer>\r\n                {this.renderSettings()}\r\n                {this.renderFeedbackDialog()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}