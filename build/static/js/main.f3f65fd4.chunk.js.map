{"version":3,"sources":["modules/utils/infoChip.component.js","modules/utils/formatNumber.function.js","modules/feed/feedItemMetadata.component.js","modules/comments/commentMetadata.component.js","modules/comments/comment.component.js","modules/comments/commentsList.component.js","modules/feed/feedItem.component.js","modules/feed/feedList.component.js","modules/main/appBar.component.js","modules/main/main.component.js","serviceWorker.js","index.js"],"names":["styles","main","margin","zoom","InfoChip","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","icon","react_default","a","createElement","ThumbUp_default","Comment_default","Face_default","Chip_default","getIcon","props","color","clickable","label","children","style","React","Component","formatNumber","n","numeral","format","position","bottom","right","div","display","FeedItemMetadata","_this","infoChip_component_InfoChip","postData","score","onClick","CommentMetadata","commentData","author","replies","marginLeft","Comment","call","state","body","replace","data","Fragment","commentMetadata_component_CommentMetadata","Typography_default","dangerouslySetInnerHTML","__html","Divider_default","showBody","map","r","buttons","float","hint","CommentsList","postId","dataFetched","axios","get","then","response","setState","commentsRoot","event","_this2","Card_default","CardContent_default","comment_component_Comment","Button_default","handleClick","LinearProgress_default","card","width","img","height","marginRight","datePosted","opacity","title","textDecoration","content","paddingBottom","commentList","FeedItem","_getPrototypeOf2","_len","length","args","Array","_key","concat","showComments","commentsList_component_CommentsList","id","e","window","open","permalink","_this3","href","url","target","CardMedia_default","image","thumbnail","moment","utc","dateUtc","fromNow","feedItemMetadata_component_FeedItemMetadata","maxWidth","listItem","more","marginBottom","FeedList","chunkSize","posts","loadMorePosts","feedUrl","List_default","list","post","ListItem_default","feedItem_component_FeedItem","variant","root","flexGrow","logo","marginTop","SlackerAppBar","className","AppBar_default","Toolbar_default","src","theme","createMuiTheme","palette","primary","blue","secondary","pink","error","red","contrastThreshold","tonalOffset","typography","useNextVariants","Main","lib_default","rel","core_styles","CssBaseline_default","appBar_component_SlackerAppBar","feedList_component_FeedList","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","main_component_Main","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f3f65fd4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst styles = {\r\n  main: {\r\n      margin: 5,\r\n      zoom: 0.85\r\n  }\r\n};\r\n\r\nexport class InfoChip extends React.Component {\r\n    getIcon(icon){\r\n        if (icon === 'like') return <ThumbUpIcon/>;\r\n        if (icon === 'comment') return <CommentIcon/>;\r\n        if (icon === 'face') return <FaceIcon/>;\r\n        return <div></div>\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Chip\r\n                icon={this.getIcon(this.props.icon)}\r\n                color={this.props.color}\r\n                clickable={this.props.clickable}\r\n                label={this.props.children}\r\n                style={styles.main}\r\n            />\r\n        );\r\n    }\r\n}","import numeral from \"numeral\";\r\n\r\nexport function formatNumber(n){\r\n    if (n>1000) return numeral(n).format('0.0a');\r\n    else return n;\r\n}","import React from 'react';\r\nimport {InfoChip} from \"../utils/infoChip.component\";\r\nimport {formatNumber} from \"../utils/formatNumber.function\";\r\n\r\nconst styles = {\r\n    main: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n    div: {\r\n        display: 'inline-block'\r\n    }\r\n};\r\n\r\nexport class FeedItemMetadata extends React.Component {\r\n    render(){\r\n        return (\r\n            <div style={styles.main}>\r\n                <InfoChip icon='like'>{formatNumber(this.props.postData.score)}</InfoChip>\r\n                <div style={styles.div} onClick={()=>this.props.onClick('collapseComments')}>\r\n                    <InfoChip icon='comment' color='primary' clickable >{formatNumber(this.props.postData.score)}</InfoChip>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {InfoChip} from \"../utils/infoChip.component\";\r\nimport {formatNumber} from \"../utils/formatNumber.function\";\r\n\r\nexport class CommentMetadata extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <InfoChip icon='face'>{this.props.commentData.author}</InfoChip>\r\n                <InfoChip icon='like'>{formatNumber(this.props.commentData.score)}</InfoChip>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {CommentMetadata} from \"./commentMetadata.component\";\r\n\r\nconst styles = {\r\n    replies: {\r\n        marginLeft: 50\r\n    }\r\n};\r\n\r\nexport class Comment extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        if (this.props.commentData.body) this.state.body = this.props.commentData.body.replace(/\\n/g, '<br>');\r\n    }\r\n    showBody(data){\r\n        if (!data.body) return(<div></div>);\r\n        return(\r\n            <React.Fragment>\r\n                <CommentMetadata commentData={this.props.commentData}/>\r\n                <Typography  dangerouslySetInnerHTML={{__html: this.state.body}}></Typography>\r\n                <Divider />\r\n            </React.Fragment>);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.showBody(this.props.commentData)}\r\n                <div style={styles.replies}>\r\n                    {this.props.commentData.replies.map(r=><Comment commentData={r}></Comment>)}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport axios from \"axios/index\";\r\nimport {Comment} from './comment.component'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst styles = {\r\n    buttons: {\r\n        float: 'right'\r\n    },\r\n    hint: {display: 'inline-block'}\r\n};\r\n\r\nexport class CommentsList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            postId: this.props.postId,\r\n            dataFetched: false\r\n        };\r\n\r\n        axios.get('/api/reddit/comments?postId='+this.state.postId).then(response => {\r\n            this.setState({postId: this.state.postId, commentsRoot: response.data, dataFetched: true});\r\n        });\r\n    }\r\n    handleClick(event){\r\n        this.props.onClick(event);\r\n    }\r\n    render() {\r\n        if (!this.state.dataFetched) return (<LinearProgress />);\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Comment commentData={this.state.commentsRoot}></Comment>\r\n                    <div style={styles.buttons}>\r\n                        <Typography style={styles.hint}>\r\n                            Showing top comments...\r\n                        </Typography>\r\n                        <Button onClick={()=>this.handleClick('collapseComments')}>\r\n                            Close\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={()=>this.props.onClick('seeAll')}>\r\n                            See All\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport {FeedItemMetadata} from './feedItemMetadata.component';\r\nimport moment from \"moment/moment\";\r\nimport {CommentsList} from \"../comments/commentsList.component\";\r\n\r\nconst styles = {\r\n    card: {\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    img: {\r\n        width: 150,\r\n        height: 100,\r\n        float: 'left',\r\n        marginRight: 10,\r\n    },\r\n    datePosted: {\r\n        opacity: 0.8\r\n    },\r\n    title: {\r\n        textDecoration: 'none'\r\n    },\r\n    content: {\r\n        marginLeft: 150,\r\n        paddingBottom: 40\r\n    },\r\n    commentList: {\r\n        width: '100%'\r\n    },\r\n};\r\n\r\nexport class FeedItem extends React.Component {\r\n    state = {showComments: false};\r\n    showComments(){\r\n        if (this.state.showComments) return <CommentsList style={styles.commentList} postId={this.props.postData.id} onClick={(e)=>this.handleClick(e)}/>;\r\n        else return null;\r\n    }\r\n    handleClick(e){\r\n        if (e==='collapseComments') {\r\n            if (!this.state.showComments) this.setState({showComments: true});\r\n            else this.setState({showComments: false});\r\n        }\r\n        if (e=='seeAll') {\r\n            window.open('https://www.reddit.com' + this.props.postData.permalink, \"_blank\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.card}>\r\n                    <a href={this.props.postData.url} target='_blank'>\r\n                        <CardMedia\r\n                            style={styles.img}\r\n                            image={this.props.postData.thumbnail}\r\n                        />\r\n                    </a>\r\n                    <CardContent style={styles.content}>\r\n                        <a href={this.props.postData.url} target='_blank' style={styles.title}>\r\n                            <Typography>\r\n                                {this.props.postData.title}\r\n                            </Typography>\r\n                        </a>\r\n                        <Typography style={styles.datePosted}>{moment.utc(this.props.postData.dateUtc).fromNow()}</Typography>\r\n                    </CardContent>\r\n                    <FeedItemMetadata postData={this.props.postData} onClick={(e)=>this.handleClick(e)}/>\r\n                </Card>\r\n                {this.showComments(this.state)}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {FeedItem} from './feedItem.component';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    main: {\r\n      maxWidth: 760,\r\n      margin: 'auto'\r\n    },\r\n    listItem: {\r\n      display: 'block'\r\n    },\r\n    more: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        marginBottom: 50\r\n    }\r\n};\r\n\r\nexport class FeedList extends React.Component {\r\n    chunkSize = 10;\r\n    state = {posts: []};\r\n    loadMorePosts(){\r\n        axios.get(this.props.feedUrl + `&from=${this.state.posts.length}&size=${this.chunkSize}`).then(response => {\r\n            if (this.state.posts.length==0) this.setState(response.data);\r\n            else {\r\n                this.state.posts = this.state.posts.concat(response.data.posts);\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.loadMorePosts();\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={styles.main}>\r\n                <List style={styles.list}>\r\n                    {this.state.posts.map(post=>\r\n                        <ListItem style={styles.listItem}>\r\n                            <FeedItem postData={post}></FeedItem>\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n                <Button style={styles.more} variant=\"contained\" color=\"primary\" onClick={()=>this.loadMorePosts()}>\r\n                    More Fun\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    logo: {\r\n        height: 42,\r\n        marginTop: 8\r\n    }\r\n};\r\n\r\nexport class SlackerAppBar extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className={styles.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            <img style={styles.logo} src='./logo-rect.png'/>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport {FeedList} from \"../feed/feedList.component\";\r\nimport {SlackerAppBar} from \"./appBar.component\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        error: red,\r\n        // Used by `getContrastText()` to maximize the contrast between the background and\r\n        // the text.\r\n        contrastThreshold: 3,\r\n        // Used to shift a color's luminance by approximately\r\n        // two indexes within its tonal palette.\r\n        // E.g., shift from Red 500 to Red 300 or Red 700.\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MetaTags>\r\n                    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"/>\r\n                </MetaTags>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <CssBaseline/>\r\n                    <SlackerAppBar></SlackerAppBar>\r\n                    <FeedList feedUrl={'/api/reddit/feed?subreddit=funny&channel=hot'}></FeedList>\r\n                </MuiThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Main} from './modules/main/main.component';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}